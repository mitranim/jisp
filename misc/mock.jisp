[use `jisp:prelude.mjs` *]
[use `jisp:ops.mjs` *]
[import `/Users/m/code/m/js/all.mjs` a]
[import `./misc.mjs` jm]
[import `./node.mjs` jn]

[class Text
  [.extend jn.Node]

  [.static.func regexp [] [throw [jm.errMeth `regexp` this]]]

  ;; Requires implicit return. ;;
  [.static.func match [src] [[this.regexp].exec [a.reqStr src]]]

  ;; Requires implicit return. ;;
  [.static.func parse [span]
    ;;
    TODO better naming.
    If the assigned value is nil, this should immediately return nil.
    ;;
    [const.guard mat [this.match [span.rem]]]

    [const tar [chain
      [new this]
      [.setSpan [span.withLen 0]]
      [.setMatch mat]
    ]]

    [span.skip [chain [tar.reqSpan] [.ownLen]]]
    tar
  ]

  ;; Requires implicit return. ;;
  [.static.func isValid [val] [jm.isFullMatch val [this.regexp]]]

  ;; Requires implicit return. ;;
  [.func setMatch [mat]
    [const len [a.reqStr [get mat 0]].length]
    [chain [this.reqSpan] [.setLen len]]
    this
  ]
]

;;

Normal comment text; contains normal semicolon.

# Markdown heading

Not # markdown heading in comment text.

;;
